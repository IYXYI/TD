name: CI/CD

on:
  push:
    branches: [main]

permissions:
  contents: read        # needed for repository access
  pages: write          # needed to deploy to GitHub Pages
  id-token: write       # needed by deploy-pages@v4

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
    steps:
      - name: Set image tags
        id: prep
        run: |
          echo "IMAGE_BACKEND=ghcr.io/iyxyi/kube-todo-backend:latest" >> $GITHUB_ENV
          echo "IMAGE_FRONTEND=ghcr.io/iyxyi/kube-todo-frontend:latest" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.IMAGE_BACKEND }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.IMAGE_FRONTEND }}

      - name: Set up KinD cluster
        uses: helm/kind-action@v1.8.0
        with:
          version: v0.23.0

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Deploy to KinD
        run: |
          kubectl apply -f k8s/
        shell: bash

      - name: Wait for monitoring pods to be ready
        run: |
          kubectl wait --for=condition=ready pod -l app=grafana --timeout=300s || true
          kubectl wait --for=condition=ready pod -l app=prometheus --timeout=300s || true
          kubectl wait --for=condition=ready pod -l app=alertmanager --timeout=300s || true

      - name: Export monitoring pod status and logs
        run: |
          mkdir -p monitoring-exports
          kubectl get pods -A -o wide > monitoring-exports/pods.txt
          kubectl get svc -A > monitoring-exports/services.txt
          kubectl logs deployment/grafana > monitoring-exports/grafana.log || true
          kubectl logs deployment/prometheus > monitoring-exports/prometheus.log || true
          kubectl logs deployment/alertmanager > monitoring-exports/alertmanager.log || true

      - name: Export Grafana dashboards (JSON)
        run: |
          GRAFANA_POD=$(kubectl get pods -l app=grafana -o jsonpath="{.items[0].metadata.name}" || echo "")
          if [ -n "$GRAFANA_POD" ]; then
            kubectl exec $GRAFANA_POD -- sh -c 'cp -r /var/lib/grafana/dashboards /tmp/dashboards || true'
            kubectl cp $GRAFANA_POD:/tmp/dashboards ./monitoring-exports/dashboards || true
          else
            echo "No Grafana pod found, skipping dashboard export"
          fi
        continue-on-error: true

      - name: Upload monitoring exports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: monitoring-exports
          path: monitoring-exports

      # Step: Upload artifact for GitHub Pages
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./monitoring-exports

      # Step: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4


        